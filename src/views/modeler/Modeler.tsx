import { useEffect } from "react"
import InfoBar from "../../components/InfoBar"
import StudioCanvas from "../../components/StudioCanvas"
import { useStudio } from "../../contexts/StudioContext"
import ModelerCommandInput from "./components/ModelerCommandInput"
import ModelerGumballPropertiesBar from "./components/ModelerGumballPropertiesBar"
import ModelerShortcuts from "./components/ModelerShortcuts"
import ModelerSidebar from "./components/ModelerSidebar"
import { usePointTracking } from "./logic/CubePointTracker"
import { useModelerGumball } from "./logic/ModelerGumball"

const Modeler = () => {
    const { getSelectedProject, onFrameListeners } = useStudio()
    const project = getSelectedProject()

    useModelerGumball()
    usePointTracking()

    useEffect(() => {
        const onFrame = () => {
            project.model.resetVisuals()
        }
        onFrameListeners.add(onFrame)
        return () => {
            onFrameListeners.delete(onFrame)
        }
    }, [project, onFrameListeners])

    useEffect(() => {
        const listener = (e: KeyboardEvent) => {
            //TODO: convert to keybinds
            if (e.ctrlKey && e.key === "z") {
                project.model.undoRedoHandler.undo()
                e.preventDefault()
                e.stopPropagation()
            }
            if ((e.ctrlKey && e.shiftKey && e.key === "z") || (e.ctrlKey && e.key === "y")) {
                project.model.undoRedoHandler.redo()
                e.preventDefault()
                e.stopPropagation()
            }
        }

        document.addEventListener("keydown", listener)
        return () => document.removeEventListener("keydown", listener)
    }, [project])
    return (
        <div className="h-full grid grid-areas-modeling"
            key={project.identifier}
            style={{
                //These would be generated by moving the panels around.
                //For now, we just hardcode them
                gridTemplateColumns: '32px auto 320px',
                gridTemplateRows: '32px auto 30px 28px'
            }}
        >
            {/* The boreders are to visulize where everything is. */}
            <div className="grid-in-command border dark:border-black border-white"><ModelerCommandInput /></div>
            <div className="grid-in-sidebar min-h-0 border dark:border-black border-white"><ModelerSidebar /></div>
            <div className="grid-in-shortcuts border dark:border-black border-white"><ModelerShortcuts /></div>
            <div className="grid-in-canvas border dark:border-black border-white"><StudioCanvas /></div>
            <div className="grid-in-gumball border dark:border-black border-white"><ModelerGumballPropertiesBar /></div>
            <div className="grid-in-info border dark:border-black border-white"><InfoBar undoRedo={project.model.undoRedoHandler} /></div>
        </div>
    )
}

export default Modeler;
